/* auto-generated by gensrv_cpp from /home/joseph/ros/pkgs/staubli/srv/command.srv.  Do not edit! */
#ifndef SRV_STAUBLI_COMMAND_H
#define SRV_STAUBLI_COMMAND_H

#include <string>
#include <cstring>
#include <vector>
#include <map>
#include "ros/message.h"
#include "ros/time.h"

namespace staubli
{

struct command
{

inline static std::string getDataType() { return "staubli/command"; }
inline static std::string getMD5Sum() { return "d4ee176917cbfd8d4480eb6512138c57"; }

//! \htmlinclude Request.msg.html

class Request : public ros::Message
{
public:
  typedef boost::shared_ptr<Request> Ptr;
  typedef boost::shared_ptr<Request const> ConstPtr;

  typedef uint8_t _command_number_type;
  typedef float _x_type;
  typedef float _y_type;
  typedef float _z_type;
  typedef float _theta_x_type;
  typedef float _theta_y_type;
  typedef float _theta_z_type;
  typedef float _joint1_type;
  typedef float _joint2_type;
  typedef float _joint3_type;
  typedef float _joint4_type;
  typedef float _joint5_type;
  typedef float _joint6_type;

  uint8_t command_number;
  float x;
  float y;
  float z;
  float theta_x;
  float theta_y;
  float theta_z;
  float joint1;
  float joint2;
  float joint3;
  float joint4;
  float joint5;
  float joint6;

  Request() : ros::Message(),
    command_number(0),
    x(0),
    y(0),
    z(0),
    theta_x(0),
    theta_y(0),
    theta_z(0),
    joint1(0),
    joint2(0),
    joint3(0),
    joint4(0),
    joint5(0),
    joint6(0)
  {
  }
  Request(const Request &copy) : ros::Message(),
    command_number(copy.command_number),
    x(copy.x),
    y(copy.y),
    z(copy.z),
    theta_x(copy.theta_x),
    theta_y(copy.theta_y),
    theta_z(copy.theta_z),
    joint1(copy.joint1),
    joint2(copy.joint2),
    joint3(copy.joint3),
    joint4(copy.joint4),
    joint5(copy.joint5),
    joint6(copy.joint6)
  {
    (void)copy;
  }
  Request &operator =(const Request &copy)
  {
    if (this == &copy)
      return *this;
    command_number = copy.command_number;
    x = copy.x;
    y = copy.y;
    z = copy.z;
    theta_x = copy.theta_x;
    theta_y = copy.theta_y;
    theta_z = copy.theta_z;
    joint1 = copy.joint1;
    joint2 = copy.joint2;
    joint3 = copy.joint3;
    joint4 = copy.joint4;
    joint5 = copy.joint5;
    joint6 = copy.joint6;
    return *this;
  }
  virtual ~Request() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("staubli/commandRequest"); }
  inline static std::string __s_getMD5Sum() { return std::string(""); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "uint8 command_number\n"
    "float32 x\n"
    "float32 y\n"
    "float32 z\n"
    "float32 theta_x\n"
    "float32 theta_y\n"
    "float32 theta_z\n"
    "float32 joint1\n"
    "float32 joint2\n"
    "float32 joint3\n"
    "float32 joint4\n"
    "float32 joint5\n"
    "float32 joint6\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline static std::string __s_getServerMD5Sum() { return std::string("d4ee176917cbfd8d4480eb6512138c57"); }
  inline virtual const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum(); }
  inline static std::string __s_getServiceDataType() { return std::string("staubli/command"); }
  inline virtual const std::string __getServiceDataType() const { return __s_getServiceDataType(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 1; // command_number
    __l += 4; // x
    __l += 4; // y
    __l += 4; // z
    __l += 4; // theta_x
    __l += 4; // theta_y
    __l += 4; // theta_z
    __l += 4; // joint1
    __l += 4; // joint2
    __l += 4; // joint3
    __l += 4; // joint4
    __l += 4; // joint5
    __l += 4; // joint6
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr,
#if defined(__GNUC__)
                             __attribute__((unused)) uint32_t seq) const
#else
                             uint32_t seq) const
#endif
  {
    SROS_SERIALIZE_PRIMITIVE(write_ptr, command_number);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, x);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, y);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, z);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, theta_x);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, theta_y);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, theta_z);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint1);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint2);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint3);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint4);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint5);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint6);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, command_number);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, x);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, y);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, z);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, theta_x);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, theta_y);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, theta_z);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint1);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint2);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint3);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint4);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint5);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint6);
    return read_ptr;
  }
};

typedef boost::shared_ptr<Request> RequestPtr;
typedef boost::shared_ptr<Request const> RequestConstPtr;

//! \htmlinclude Response.msg.html

class Response : public ros::Message
{
public:
  typedef boost::shared_ptr<Response> Ptr;
  typedef boost::shared_ptr<Response const> ConstPtr;

  typedef float _x_type;
  typedef float _y_type;
  typedef float _z_type;
  typedef float _theta_x_type;
  typedef float _theta_y_type;
  typedef float _theta_z_type;
  typedef float _joint1_type;
  typedef float _joint2_type;
  typedef float _joint3_type;
  typedef float _joint4_type;
  typedef float _joint5_type;
  typedef float _joint6_type;

  float x;
  float y;
  float z;
  float theta_x;
  float theta_y;
  float theta_z;
  float joint1;
  float joint2;
  float joint3;
  float joint4;
  float joint5;
  float joint6;

  Response() : ros::Message(),
    x(0),
    y(0),
    z(0),
    theta_x(0),
    theta_y(0),
    theta_z(0),
    joint1(0),
    joint2(0),
    joint3(0),
    joint4(0),
    joint5(0),
    joint6(0)
  {
  }
  Response(const Response &copy) : ros::Message(),
    x(copy.x),
    y(copy.y),
    z(copy.z),
    theta_x(copy.theta_x),
    theta_y(copy.theta_y),
    theta_z(copy.theta_z),
    joint1(copy.joint1),
    joint2(copy.joint2),
    joint3(copy.joint3),
    joint4(copy.joint4),
    joint5(copy.joint5),
    joint6(copy.joint6)
  {
    (void)copy;
  }
  Response &operator =(const Response &copy)
  {
    if (this == &copy)
      return *this;
    x = copy.x;
    y = copy.y;
    z = copy.z;
    theta_x = copy.theta_x;
    theta_y = copy.theta_y;
    theta_z = copy.theta_z;
    joint1 = copy.joint1;
    joint2 = copy.joint2;
    joint3 = copy.joint3;
    joint4 = copy.joint4;
    joint5 = copy.joint5;
    joint6 = copy.joint6;
    return *this;
  }
  virtual ~Response() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("staubli/commandResponse"); }
  inline static std::string __s_getMD5Sum() { return std::string(""); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "float32 x\n"
    "float32 y\n"
    "float32 z\n"
    "float32 theta_x\n"
    "float32 theta_y\n"
    "float32 theta_z\n"
    "float32 joint1\n"
    "float32 joint2\n"
    "float32 joint3\n"
    "float32 joint4\n"
    "float32 joint5\n"
    "float32 joint6\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline static std::string __s_getServerMD5Sum() { return std::string("d4ee176917cbfd8d4480eb6512138c57"); }
  inline virtual const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum(); }
  inline static std::string __s_getServiceDataType() { return std::string("staubli/command"); }
  inline virtual const std::string __getServiceDataType() const { return __s_getServiceDataType(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 4; // x
    __l += 4; // y
    __l += 4; // z
    __l += 4; // theta_x
    __l += 4; // theta_y
    __l += 4; // theta_z
    __l += 4; // joint1
    __l += 4; // joint2
    __l += 4; // joint3
    __l += 4; // joint4
    __l += 4; // joint5
    __l += 4; // joint6
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr,
#if defined(__GNUC__)
                             __attribute__((unused)) uint32_t seq) const
#else
                             uint32_t seq) const
#endif
  {
    SROS_SERIALIZE_PRIMITIVE(write_ptr, x);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, y);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, z);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, theta_x);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, theta_y);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, theta_z);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint1);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint2);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint3);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint4);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint5);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, joint6);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, x);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, y);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, z);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, theta_x);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, theta_y);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, theta_z);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint1);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint2);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint3);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint4);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint5);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, joint6);
    return read_ptr;
  }
};

typedef boost::shared_ptr<Response> ResponsePtr;
typedef boost::shared_ptr<Response const> ResponseConstPtr;

Request request;
Response response;

};

}

#endif
